// import RFM data

cd /home
mkdir segments
cd /home/segments

hadoop fs -mkdir /user/segments/
hadoop fs -put segments.csv /user/segments/

create table capstone.segments (
segment INT
id STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';

load data inpath '/user/segments/segments.csv'
into table capstone.segments;



create table dataMBA as
select a.id, a.transdate, a.category, a.brand, b.segment
from cleandatax a join segments b
on a.id = b.id; 

///// segmentONE - BEST CUSTOMERS

create table segmentONE as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 1;

select count(distinct id) from segmentone;

create table seg1DUMP
row format delimited
fields terminated by ','
lines terminated by '\n' as
select * from capstone.segmentONE;


///// segmentTWO - FORMER BEST CUSTOMERS

create table segmentTWO as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 2;

select count(distinct id) from segmenttwo;

create table seg2DUMP
row format delimited
fields terminated by ','
lines terminated by '\n' as
select * from capstone.segmentTWO;


///// segmentTHREE - ONE TIME BUYERS

create table segmentTHREE as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 3;

select count(distinct id) from segmentthree;

create table seg3DUMP
row format delimited
fields terminated by ','
lines terminated by '\n' as
select * from capstone.segmentTHREE;


///// segmentFOUR - NEW CUSTOMERS

create table segmentFOUR as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 4;

select count(distinct id) from segmentfour;

create table seg4DUMP
row format delimited
fields terminated by ','
lines terminated by '\n' as
select * from capstone.segmentFOUR;



library('arules')



setwd('\\\\files.loyalty.com/users/tmcdonald/My Documents/Big Data & Predictive Analytics/segmentONE')

seg1a <- read.csv('001a.csv', sep = ',', header = FALSE)
seg1b <- read.csv('001b.csv', sep = ',', header = FALSE)
seg1c <- read.csv('001c.csv', sep = ',', header = FALSE)
seg1d <- read.csv('001d.csv', sep = ',', header = FALSE)
seg1e <- read.csv('001e.csv', sep = ',', header = FALSE)
seg1f <- read.csv('001f.csv', sep = ',', header = FALSE)
seg1g <- read.csv('001g.csv', sep = ',', header = FALSE)
seg1h <- read.csv('001h.csv', sep = ',', header = FALSE)
seg1i <- read.csv('001i.csv', sep = ',', header = FALSE)
segmentONE <- rbind(seg1a, seg1b, seg1c, seg1d, seg1e, seg1f, seg1g, seg1h, seg1i)
colnames(segmentONE) = c('customer_id', 'date_of_purchase', 'category', 'brand', 'segment', 'product', 'transID')

segmentONE$customer_id <- NULL
segmentONE$date_of_purchase <- NULL
segmentONE$category <- NULL
segmentONE$segment <- NULL
segmentONE$product <- NULL

segmentONECLEAN <- unique(segmentONE)

AggPosData1 <- split(segmentONECLEAN$brand,segmentONECLEAN$transID)
head(AggPosData1)

Txns1 <- as(AggPosData1,'transactions')
summary(Txns1)

itemFrequencyPlot(Txns1,topN=20,type="absolute")

rules_1 <- apriori(Txns1, parameter = list(supp = 0.0075, conf = 0.8))
rules_1 <-sort(rules_1, by="confidence", decreasing=TRUE)
summary(rules_1)

inspect(rules_1)


rules1a <- apriori(data=Txns1, parameter=list(supp=0.001,conf = 0.08), 
appearance = list(default="lhs",rhs="15704"),
control = list(verbose=F))

rules1a <- sort(rules1a, by="confidence", decreasing=TRUE)

inspect(rules1a[1:5])


rules1b <- apriori(data=Txns1, parameter=list(supp=0.001,conf = 0.05,minlen=2), 
appearance = list(default="rhs",lhs="15704"),
control = list(verbose=F))

rules1b <- sort(rules1b, by="confidence", decreasing=TRUE)

inspect(rules1b[1:5])





setwd('\\\\files.loyalty.com/users/tmcdonald/My Documents/Big Data & Predictive Analytics/segmentTWO')

seg2a <- read.csv('002a.csv', sep = ',', header = FALSE)
seg2b <- read.csv('002b.csv', sep = ',', header = FALSE)
seg2c <- read.csv('002c.csv', sep = ',', header = FALSE)
seg2d <- read.csv('002d.csv', sep = ',', header = FALSE)
seg2e <- read.csv('002e.csv', sep = ',', header = FALSE)
seg2f <- read.csv('002f.csv', sep = ',', header = FALSE)
segmentTWO <- rbind(seg2a, seg2b, seg2c, seg2d, seg2e, seg2f)
colnames(segmentTWO) = c('customer_id', 'date_of_purchase', 'category', 'brand', 'segment', 'product', 'transID')

segmentTWO$customer_id <- NULL
segmentTWO$date_of_purchase <- NULL
segmentTWO$category <- NULL
segmentTWO$segment <- NULL
segmentTWO$product <- NULL

segmentTWOCLEAN <- unique(segmentTWO)

AggPosData2 <- split(segmentTWOCLEAN$brand,segmentTWOCLEAN$transID)
head(AggPosData2)

Txns2 <- as(AggPosData2,'transactions')
summary(Txns2)

itemFrequencyPlot(Txns2,topN=20,type="absolute")

rules_2 <- apriori(Txns2, parameter = list(supp = 0.0075, conf = 0.8))
rules_2 <-sort(rules_2, by="confidence", decreasing=TRUE)
summary(rules_2)

inspect(rules_2)


rules2a <- apriori(data=Txns2, parameter=list(supp=0.001,conf = 0.08), 
appearance = list(default="lhs",rhs="15704"),
control = list(verbose=F))

rules2a <- sort(rules2a, by="confidence", decreasing=TRUE)

inspect(rules2a[1:5])


rules2b <- apriori(data=Txns2, parameter=list(supp=0.001,conf = 0.05,minlen=2), 
appearance = list(default="rhs",lhs="15704"),
control = list(verbose=F))

rules2b <- sort(rules2b, by="confidence", decreasing=TRUE)

inspect(rules2b[1:5])





setwd('\\\\files.loyalty.com/users/tmcdonald/My Documents/Big Data & Predictive Analytics/segmentTHREE')

seg3a <- read.csv('003a.csv', sep = ',', header = FALSE)
seg3b <- read.csv('003b.csv', sep = ',', header = FALSE)
seg3c <- read.csv('003c.csv', sep = ',', header = FALSE)
seg3d <- read.csv('003d.csv', sep = ',', header = FALSE)
seg3e <- read.csv('003e.csv', sep = ',', header = FALSE)
segmentTHREE <- rbind(seg3a, seg3b, seg3c, seg3d, seg3e)
colnames(segmentTHREE) = c('customer_id', 'date_of_purchase', 'category', 'brand', 'segment', 'product', 'transID')

segmentTHREE$customer_id <- NULL
segmentTHREE$date_of_purchase <- NULL
segmentTHREE$category <- NULL
segmentTHREE$segment <- NULL
segmentTHREE$product <- NULL

segmentTHREECLEAN <- unique(segmentTHREE)

AggPosData3 <- split(segmentTHREECLEAN$brand,segmentTHREECLEAN$transID)
head(AggPosData3)

Txns3 <- as(AggPosData3,'transactions')
summary(Txns3)

itemFrequencyPlot(Txns3,topN=20,type="absolute")

rules_3 <- apriori(Txns3, parameter = list(supp = 0.0075, conf = 0.8))
rules_3 <-sort(rules_3, by="confidence", decreasing=TRUE)
summary(rules_3)

inspect(rules_3)


rules3a <- apriori(data=Txns3, parameter=list(supp=0.001,conf = 0.08), 
appearance = list(default="lhs",rhs="15704"),
control = list(verbose=F))

rules3a <- sort(rules3a, by="confidence", decreasing=TRUE)

inspect(rules3a[1:5])


rules3b <- apriori(data=Txns3, parameter=list(supp=0.001,conf = 0.05,minlen=2), 
appearance = list(default="rhs",lhs="15704"),
control = list(verbose=F))

rules3b <- sort(rules3b, by="confidence", decreasing=TRUE)

inspect(rules3b[1:5])





setwd('\\\\files.loyalty.com/users/tmcdonald/My Documents/Big Data & Predictive Analytics/segmentFOUR')

seg4a <- read.csv('004a.csv', sep = ',', header = FALSE)
seg4b <- read.csv('004b.csv', sep = ',', header = FALSE)
seg4c <- read.csv('004c.csv', sep = ',', header = FALSE)
seg4d <- read.csv('004d.csv', sep = ',', header = FALSE)
seg4e <- read.csv('004e.csv', sep = ',', header = FALSE)
segmentFOUR <- rbind(seg4a, seg4b, seg4c, seg4d, seg4e)
colnames(segmentFOUR) = c('customer_id', 'date_of_purchase', 'category', 'brand', 'segment', 'product', 'transID')

segmentFOUR$customer_id <- NULL
segmentFOUR$date_of_purchase <- NULL
segmentFOUR$category <- NULL
segmentFOUR$segment <- NULL
segmentFOUR$product <- NULL

segmentFOURCLEAN <- unique(segmentFOUR)

AggPosData4 <- split(segmentFOURCLEAN$brand,segmentFOURCLEAN$transID)
head(AggPosData4)

Txns4 <- as(AggPosData4,'transactions')
summary(Txns4)

itemFrequencyPlot(Txns4,topN=20,type="absolute")

rules_4 <- apriori(Txns4, parameter = list(supp = 0.0075, conf = 0.8))
rules_4 <-sort(rules_4, by="confidence", decreasing=TRUE)
summary(rules_4)

inspect(rules_4)


rules4a <- apriori(data=Txns4, parameter=list(supp=0.001,conf = 0.08), 
appearance = list(default="lhs",rhs="15704"),
control = list(verbose=F))

rules4a <- sort(rules4a, by="confidence", decreasing=TRUE)

inspect(rules4a[1:5])


rules4b <- apriori(data=Txns4, parameter=list(supp=0.001,conf = 0.05,minlen=2), 
appearance = list(default="rhs",lhs="15704"),
control = list(verbose=F))

rules4b <- sort(rules4b, by="confidence", decreasing=TRUE)

inspect(rules4b[1:5])
