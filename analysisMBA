// import RFM data

cd /home
mkdir segments
cd /home/segments

hadoop fs -mkdir /user/segments/
hadoop fs -put segments.csv /user/segments/

create table capstone.segments (
segment INT
id STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';

load data inpath '/user/segments/segments.csv'
into table capstone.segments;



create table dataMBA as
select a.id, a.transdate, a.category, a.brand, b.segment
from cleandatax a join segments b
on a.id = b.id; 

create table segmentONE as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 1;

create table segmentTWO as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 2;

create table segmentTHREE as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 3;

create table segmentFOUR as
select id, transdate, category, brand, segment,
concat(category, brand) as product,
concat(id, transdate) as transID
from dataMBA
where segment = 4;







setwd('\\\\files.loyalty.com/users/tmcdonald/My Documents/Big Data & Predictive Analytics')
segmentTEST <- read.csv('part1.csv', sep = ',', header = FALSE)

colnames(segmentTEST) = c('customer_id', 'date_of_purchase', 'category', 'brand', 'segment', 'product', 'transID')

segmentCLEAN <- unique(segmentTEST)

AggPosData <- split(segmentCLEAN$product,segmentCLEAN$transID)
head(AggPosData)

install.packages('arules')
library('arules')

Txns<-as(AggPosData,'transactions')
summary(Txns)

install.packages('arulesViz')
library('arulesViz')

itemFrequencyPlot(Txns,topN=20,type="absolute")

rules <- apriori(Txns, parameter = list(supp = 0.001, conf = 0.8))
rules<-sort(rules, by="confidence", decreasing=TRUE)
inspect(rules[1:5])

rules<-apriori(data=Txns, parameter=list(supp=0.001,conf = 0.08), 
appearance = list(default="lhs",rhs="97530"),
control = list(verbose=F))

rules<-sort(rules, by="confidence", decreasing=TRUE)

inspect(rules[1:5])

rules<-apriori(data=Txns, parameter=list(supp=0.001,conf = 0.05,minlen=2), 
appearance = list(default="rhs",lhs="97530"),
control = list(verbose=F))

rules<-sort(rules, by="confidence", decreasing=TRUE)

inspect(rules[1:5])



select product, count(*) as total
from segmentONE
group by product
order by total desc
limit 25;

select product, count(distinct transID) as total from segmentone
group by product
order by total desc
limit 25; 

select count(distinct transID) from segmenttwo; 

